openapi: 3.0.0
servers:
  - url: https://{apigateway}/api/v3/{ApiHost}/
    variables:
      apigateway:
        default: apigateway.twcc.ai
      ApiHost:
        default: tcr
info:
  version: 1.0.0-beta
  title: Harbor API
  description: |
    This is Harbor API.
security:
  - ApiKeyAuth: []
tags:
  - name: project
paths:
  /projects/:
    get:
      tags:
        - project
      summary: List projects
      description: List projects
      parameters:
        - in: query
          name: name
          description: The name of the project
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupSerializer'
  /projects/{project_id}/:
    get:
      tags:
        - project
      summary: Get details of a project
      description: Get details of a project
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetailSerializer'
  /projects/{project_id}/images/:
    get:
      tags:
        - project
      summary: List Harbor Images
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HarborImageSerializer'
                example: |-
                  [
                      {
                          "artifact_count": 2,
                              "artifacts": [
                                  {
                                      "digest": "sha256:2468d48e476b6eb646e87620f96ce1",
                                      "pull_time": "0001-01-01T00:00:00.000Z",
                                      "push_time": "2022-03-04T07:31:00.282Z",
                                      "scan_overview": null,
                                      "size": "54.10MiB",
                                      "tags": [
                                          {
                                            "immutable": false,
                                            "name": "v3",
                                            "pull_time": "0001-01-01T00:00:00.000Z",
                                            "push_time": "2022-04-12T08:42:09.464Z",
                                            "signed": false
                                          },
                                          {
                                            "immutable": false,
                                            "name": "latest",
                                            "pull_time": "0001-01-01T00:00:00.000Z",
                                            "push_time": "2022-03-04T07:31:00.321Z",
                                            "signed": false
                                          }
                                      ]
                                  },
                                  {
                                      "digest": "sha256:ad2d74f1fd54f763c91862ed13539e80d005882adcee9602d254fc5280",
                                      "pull_time": "2022-04-25T06:53:41.514Z",
                                      "push_time": "2022-04-25T01:46:51.515Z",
                                      "scan_overview": {
                                          "complete_percent": 100,
                                          "end_time": "2022-04-25T06:53:45.000Z",
                                          "scan_status": "Success",
                                          "severity": "Critical",
                                          "start_time": "2022-04-25T06:53:26.000Z"
                                      },
                                      "size": "40.00MiB",
                                      "tags": [
                                          {
                                              "immutable": false,
                                              "name": "v4",
                                              "pull_time": "0001-01-01T00:00:00.000Z",
                                              "push_time": "2022-04-25T01:46:51.587Z",
                                              "signed": false
                                          }
                                      ]
                                  }
                              ],
                          "creation_time": "2022-03-04T07:31:00.242Z",
                          "name": "nginx",
                          "pull_count": 1,
                          "update_time": "2022-04-25T06:53:41.516Z"
                      }
                  ]
  /projects/{project_id}/images/{image_name}/tags/:
    post:
      tags:
        - project
      summary: Create a new tag base on source tag
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/ImageNameParam'
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
              - name
              - source
              properties:
                name:
                  type: string
                  description: New tag name.
                source:
                  type: string
                  description: Source tag name.
      responses:
        201:
          description: Created
          content: {}
  /projects/{project_id}/images/{image_name}/tags/{tag_name}/:
    delete:
      tags:
        - project
      summary: Remove a tag of harbor image
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/ImageNameParam'
        - $ref: '#/components/parameters/TagNameParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        204:
          description: No Content
          content: {}
  /projects/{project_id}/harbor_quotas/:
    get:
      tags:
        - project
      summary: Get quota of the specified harbor project ID
      description: Get quota of the specified harbor project ID
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHarborQuotaSerializer'
                example: |-
                  {
                      "quota": -1,
                      "usage": 12483354
                  }
    patch:
      tags:
        - project
      summary: Update quotas of the specified S3 private key
      description: Update quotas of the specified S3 private key
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
              - quota
              properties:
                quota:
                  type: integer
                  description: The harbor storage quota, number of bytes
                  format: int32
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHarborQuotaSerializer'
                example: |-
                        {
                            "quota": 10737418240,
                            "usage": 12483354
                        }
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    GroupSerializer:
      type: object
      properties:
        matchLabels:
          type: array
          items:
            type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        platform:
          type: string
        transparent_mode:
          type: boolean
      required:
        - matchLabels
        - id
        - name
        - platform
        - transparent_mode
    GroupDetailSerializer:
      type: object
      properties:
        desc:
          type: string
        id:
          format: int64
          type: integer
        matchLabels:
          type: array
          items:
            type: string
            example: twsc
        name:
          type: string
          example: ENT123456
        status:
          type: string
          example: Ready
        status_reason:
          type: string
        tm_uuid:
          type: string
        transparent_mode:
          type: boolean
          example: false
        uuid:
          type: string
          format: uuid
      required:
        - desc
        - id
        - matchLabels
        - name
        - status
        - status_reason
        - tm_uuid
        - transparent_mode
        - uuid
    ProjectHarborQuotaSerializer:
      required:
      - quota
      type: object
      properties:
        quota:
          type: integer
          format: int64
        usage:
          type: integer
          format: int64
    HarborImageSerializer:
      type: object
      properties:
        artifact_count:
          type: integer
          format: int64
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/HarborArtifactSerializer'
        creation_time:
          type: string
          format: date-time
        name:
          type: string
        pull_count:
          type: integer
          format: int64
        update_time:
          type: string
          format: date-time
  parameters:
    ProjectInQueryParam:
      name: project
      in: query
      description: Harbor project ID
      required: true
      schema:
        type: integer
    ProjectInPathParam:
      name: project_id
      in: path
      description: Project ID
      required: true
      schema:
        type: integer
    ImageNameParam:
      name: image_name
      in: path
      description: The harbor image name
      required: true
      schema:
        type: string
    TagNameParam:
      name: tag_name
      in: path
      description: Tag name to be deleted
      required: true
      schema:
        type: string
    ApiHostParam:
      name: x-api-host
      in: header
      description: Authentication Required Parameters
      required: true
      schema:
        type: string
        default: tcr
      # examples:
      #   production:
      #     summary: production
      #     value: default_harbor
      #   staging:
      #     summary: staging
      #     value: default_harbor