openapi: 3.0.3
servers:
  - url: https://{apigateway}/api/v3/
    variables:
      apigateway:
        default: apigateway.twcc.ai
info:
  # description: This is a simple API
  version: 1.2.0
  title: Common API
  description: |
    This is Common API.
security:
  - ApiKeyAuth: []
tags:
  - name: solution
  - name: image requests
  - name: image commit
  - name: version
  - name: token request
  - name: project
paths:
  /version/:
    get:
      tags: 
        - version
      summary: Show the version
      description: Show the version
      parameters:
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionSerializer'
  /token_requests/:
    get:
      tags:
      - token request
      summary: Lists token requests
      description: Lists token requests
      parameters:
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenRequestSerializer'
  /token_requests/{token_request_id}/:
    get:
      tags:
      - token request
      summary: Shows details for a token request
      description: Shows details for a token request.
      parameters:
        - $ref: '#/components/parameters/TokenRequestIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRequestSerializer'
  /solutions/:
    get:
      tags:
        - solution
      summary: List solutions
      parameters:
        - in: query
          name: project
          description: One of project and project_name is required
          required: false
          schema:
            type: string
        - in: query
          name: project_name
          description: One of project and project_name is required
          required: false
          schema:
            type: string
        - in: query
          name: category
          description: Solution category
          required: true
          schema:
            type: string
          examples:
            VCS:
              summary: With VCS
              value: os
            CCS:
              summary: With CCS
              value: container
        - name: name
          in: query
          description: Solution Nmae
          schema:
            type: string
        - name: state
          in: query
          description: Solution State
          schema:
            type: string
        - name: desc
          in: query
          description: Solution Description
          schema:
            type: string
        - name: create_time_start
          in: query
          description: Create Time Start
          schema:
            type: string
        - name: create_time_end
          in: query
          description: Create Time End
          schema:
            type: string
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  解決方案
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolutionSerializer'
        400:
          $ref: '#/components/responses/40000BadRequest'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /solutions/{solutions_id}/:
    get:
      tags:
        - solution
      summary: Get a solution detail
      parameters:
        - $ref: '#/components/parameters/SolutionsIDParam'
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  解決方案
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionSerializer'
  /projects/{project_name}/favorites/:
    get:
      tags:
        - project
      summary: Get Favorite context of a specific project name
      description: Get Favorite context of a specific project name
      parameters:
        - $ref: '#/components/parameters/ProjectNameParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteSerializer'
    patch:
      tags:
        - project
      summary: Update Favorite context of a specific project name
      description: Update Favorite context of a specific project name
      parameters:
        - $ref: '#/components/parameters/ProjectNameParam'
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        description: body
        content:
          application/json:
            schema:
              type: object
              properties:
                favorite:
                  type: string
        required: true
      responses:
        200:
          description:  OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteSerializer'
  /image_commit/:
    get:
      tags:
      - image commit
      summary: List image commit
      description: List image commit request.
      parameters: 
        # - $ref: '#/components/parameters/ProjectInQueryParam'
        - ProjectInQueryParam:
          name: project
          in: query
          description: Project ID is required to request
          schema:
            type: integer
        - name: site
          in: query
          description: Site ID
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: Image commit status (requested/resolved/rejected)
          schema:
            type: string
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCommitSerializer'
    post:
      tags:
      - image commit
      summary: Create image commit request
      description: Create image commit request
      parameters: 
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        description: POST
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageCommitPostJSON'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  tag:
                    type: string
                  status:
                    type: string
                  create_time:
                    type: string
                    format: date-time
  /image_commit/{image_commit_id}/:
    delete:
      tags:
      - image commit
      summary: Delete a image commit
      description: Delete a image commit
      parameters:
      - $ref: '#/components/parameters/ImageCommitIDParam'
      - $ref: '#/components/parameters/ApiHostParam'
      responses:
        204:
          description: No Content
          content: {}
    patch:
      tags:
      - image commit
      summary: PATCH the image commit.
      description: PATCH the image commit.
      parameters:
      - $ref: '#/components/parameters/ImageCommitIDParam'
      - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        content:
          application/json:
            schema:
              required:
              - status
              properties:
                status:
                  type: string
                  description: Image commit status
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: requested/resolved
  /image_requests/:
    get:
      tags: 
        - image requests
      summary: List image copy request
      description: List image copy requests.
      parameters: 
        - name: status
          in: query
          description: filter commit status
          schema:
            type: string
            enum: [approved, failed, finished, requested]
        - name: src_project
          in: query
          description: Filter Source Image Project ID
          schema:
            type: integer
            format: int32
        - name: dst_project
          in: query
          description: Filter Destination Project ID
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageRequestSerializer'
    post:
      tags: 
        - image requests
      summary: Create image copy request
      description: Create image copy request
      parameters:
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        description: POST
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRequestPostJSON'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageRequestSerializer'
  /image_requests/{image_request_id}/:
    get:
      tags: 
        - image requests
      summary: Get a image copy request
      description: Get a image copy request
      parameters:
        - $ref: '#/components/parameters/ImageRequestIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRequestSerializer'
    delete:
      tags:
        - image requests
      summary: Delete a image copy request
      description: Delete a image copy request
      parameters:
        - $ref: '#/components/parameters/ImageRequestIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        204:
          description: No Content
          content: {}
    patch:
      tags:
        - image requests
      summary: PATCH the image copy request status to requested.
      parameters:
        - $ref: '#/components/parameters/ImageRequestIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status :
                  type: string
                  enum: [approved, failed, finished, requested]
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [approved, failed, finished, requested]
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  parameters:
    ProjectInQueryParam:
      name: project
      in: query
      description: Project ID is required to request
      required: true
      schema:
        type: integer
    SolutionsIDParam:
      name: solutions_id
      in: path
      description: Solution ID
      required: true
      schema:
        type: integer
    TokenRequestIDParam:
      name: token_request_id
      in: path
      description: The ID for the load balancer.
      required: true
      schema:
        type: integer
        format: int32
    ImageRequestIDParam:
      name: image_request_id
      in: path
      description: image request ID
      required: true
      schema:
        type: integer
        format: int32
    ImageCommitIDParam:
      name: image_commit_id
      in: path
      description: image commit ID
      required: true
      schema:
        type: integer
        format: int32
    ProjectNameParam:
      name: project_name
      in: path
      description: The name of the project
      required: true
      schema:
        type: string
    ApiHostParam:
      name: x-api-host
      in: header
      description: Authentication Required Parameters
      required: true
      schema:
        type: string
        default: goc
  schemas:
    SolutionSerializer:
      required:
      - category
      - create_time
      - desc
      - id
      - is_public
      - labels
      - name
      - state
      type: object
      properties:
        desc:
          type: string
        id:
          type: integer
          format: int64
        labels:
          type: array
          items:
            type: string
        name:
          type: string
        state:
          type: string
        category:
          type: string
        create_time:
          type: string
          format: date-time
        is_public:
          type: boolean
        is_tenant_admin_only:
          type: boolean
    ServerDiskReadUtilSerializer:
      required:
      - disk_read_bytes_rate
      - timestamp
      - unit
      type: object
      properties:
        disk_read_bytes_rate:
          type: string
        timestamp:
          type: string
          format: date-time
        unit:
          type: string
    ImageCommitSerializer:
      type: array
      items:
        $ref: '#/components/schemas/ImageCommitSerializerObj'
    ImageCommitSerializerObj:
      required:
      - container_id
      - create_time
      - id
      - image
      - namespace
      - node
      - project
      - resource_name
      - status
      - tag
      - user
      type: object
      properties:
        id:
          type: integer
          format: int64
        image:
          type: string
        tag:
          type: string
        container_id:
          type: string
        node:
          type: string
        status:
          type: string
        create_time:
          type: string
          format: date-time
        namespace:
          type: string
        user:
          $ref: '#/components/schemas/UserSerializer'
        project:
          $ref: '#/components/schemas/GroupSerializer'
        resource_name:
          type: string
    ImageCommitPostJSON:
      required:
      - image
      - site
      - tag
      type: object
      properties:
        site:
          type: integer
          format: int64
        image:
          type: string
        tag:
          type: string
    ImageRequestSerializer:
      required:
      - create_time
      - dst_project
      - id
      - image
      - src_project
      - status
      - tag_image
      type: object
      properties:
        create_time:
          type: string
          format: date-time
        dst_project:
          $ref: '#/components/schemas/GroupSerializer'
        id:
          type: integer
          format: int64
        image:
          $ref: '#/components/schemas/ImageField'
        src_project:
          $ref: '#/components/schemas/GroupSerializer'
        status:
          type: string
          enum: [approved, failed, finished, requested]
        tag_image:
          type: string
        user:
          $ref: '#/components/schemas/UserSerializer'
    GroupSerializer:
      type: object
      properties:
        id:
          type: integer
          format: int64
    ImageField:
      type: object
      properties:
        id:
          type: integer
          format: int64
    UserSerializer:
      type: object
      properties:
        id:
          type: integer
          format: int64
    VersionSerializer:
      required:
      - version
      type: object
      properties:
        version:
          type: string
    TokenRequestSerializer:
      required:
      - create_time
      - deleted_time
      - id
      - requester
      - resolved_time
      - status
      - token
      - user
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          type: string
        requester:
          type: string
        token:
          type: string
        status:
          type: string
        create_time:
          type: string
          format: date-time
        resolved_time:
          type: string
          format: date-time
        deleted_time:
          type: string
          format: date-time
    ImageRequestPostJSON:
      required:
      - dst_project
      - image
      - tag_image
      type: object
      properties:
        dst_project:
          type: integer
          format: int64
        image:
          type: integer
          format: int64
        tag_image:
          type: string
    FavoriteSerializer:
      required:
      - favorite
      type: object
      properties:
        favorite:
          type: string
  responses:
    40000BadRequest:
      description: Non-system admin
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServerDiskReadUtilSerializer'
    500InternalServerError:
      description: Internal Server Error
      content: {}